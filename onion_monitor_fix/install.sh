#!/bin/bash

echo "üîê Iniciando instala√ß√£o do Onion Monitor v1 üîê"
echo "=============================================="

# Cores para melhor visualiza√ß√£o
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para exibir mensagens de progresso
progress() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Fun√ß√£o para exibir mensagens de sucesso
success() {
    echo -e "${GREEN}[SUCESSO]${NC} $1"
}

# Fun√ß√£o para exibir mensagens de erro
error() {
    echo -e "${RED}[ERRO]${NC} $1"
}

# Fun√ß√£o para exibir mensagens de aviso
warning() {
    echo -e "${YELLOW}[AVISO]${NC} $1"
}

# Verificar se est√° sendo executado como root
if [ "$EUID" -ne 0 ]; then
    warning "Este script n√£o est√° sendo executado como root."
    warning "Algumas opera√ß√µes podem falhar. Recomendamos executar com sudo."
    read -p "Deseja continuar mesmo assim? (s/n): " choice
    if [ "$choice" != "s" ] && [ "$choice" != "S" ]; then
        error "Instala√ß√£o cancelada pelo usu√°rio."
        exit 1
    fi
fi

# Criar diret√≥rio de logs se n√£o existir
mkdir -p logs
touch logs/app.log logs/coletor.log logs/db.log logs/busca_semantica.log logs/auditoria.log logs/migration.log

progress "Verificando depend√™ncias do sistema..."

# Verificar e instalar depend√™ncias do sistema
apt_packages=(
    python3
    python3-pip
    python3-venv
    tor
    sqlite3
    curl
    git
)

pip_packages=(
    flask
    requests
    beautifulsoup4
    pysocks
    stem
    lxml
    selenium
    webdriver-manager
    pandas
    matplotlib
    seaborn
    nltk
    scikit-learn
)

# Verificar se apt-get est√° dispon√≠vel
if command -v apt-get &> /dev/null; then
    progress "Atualizando reposit√≥rios..."
    apt-get update -qq
    
    for package in "${apt_packages[@]}"; do
        if ! dpkg -l | grep -q $package; then
            progress "Instalando $package..."
            apt-get install -y $package
        else
            success "$package j√° est√° instalado."
        fi
    done
else
    warning "apt-get n√£o encontrado. Pulando instala√ß√£o de pacotes do sistema."
    warning "Certifique-se de que os seguintes pacotes est√£o instalados:"
    for package in "${apt_packages[@]}"; do
        echo "  - $package"
    done
fi

# Verificar se o servi√ßo Tor est√° instalado e iniciar
if command -v tor &> /dev/null; then
    progress "Verificando servi√ßo Tor..."
    if systemctl is-active --quiet tor; then
        success "Servi√ßo Tor j√° est√° em execu√ß√£o."
    else
        progress "Iniciando servi√ßo Tor..."
        systemctl start tor
        if systemctl is-active --quiet tor; then
            success "Servi√ßo Tor iniciado com sucesso."
        else
            warning "N√£o foi poss√≠vel iniciar o servi√ßo Tor. Algumas funcionalidades podem n√£o funcionar corretamente."
        fi
    fi
else
    warning "Tor n√£o encontrado. A busca em sites .onion n√£o funcionar√° corretamente."
fi

# Criar e ativar ambiente virtual
progress "Criando ambiente virtual Python..."
if [ -d "venv" ]; then
    success "Ambiente virtual j√° existe."
else
    python3 -m venv venv
    success "Ambiente virtual criado."
fi

# Ativar ambiente virtual
progress "Ativando ambiente virtual..."
source venv/bin/activate

# Instalar depend√™ncias Python
progress "Instalando depend√™ncias Python..."
pip install --upgrade pip
pip install -r requirements.txt

# Verificar se todas as depend√™ncias foram instaladas
missing_packages=()
for package in "${pip_packages[@]}"; do
    if ! pip show $package &> /dev/null; then
        missing_packages+=($package)
    fi
done

if [ ${#missing_packages[@]} -gt 0 ]; then
    warning "Algumas depend√™ncias Python n√£o foram instaladas corretamente:"
    for package in "${missing_packages[@]}"; do
        echo "  - $package"
    done
    progress "Tentando instalar pacotes faltantes individualmente..."
    for package in "${missing_packages[@]}"; do
        pip install $package
    done
fi

# Inicializar banco de dados
progress "Inicializando banco de dados..."
python -c "from db import init_db, migrar_banco; init_db(); migrar_banco()"
if [ $? -eq 0 ]; then
    success "Banco de dados inicializado com sucesso."
else
    error "Erro ao inicializar banco de dados."
    exit 1
fi

# Verificar conex√£o com Tor
progress "Verificando conex√£o com Tor..."
python torcheck.py
if [ $? -eq 0 ]; then
    success "Conex√£o com Tor verificada com sucesso."
else
    warning "N√£o foi poss√≠vel verificar a conex√£o com Tor. A busca em sites .onion pode n√£o funcionar corretamente."
fi

# Criar fontes de exemplo se n√£o existirem
progress "Verificando fontes cadastradas..."
python -c "from db import obter_fontes, adicionar_fonte; fontes = obter_fontes(); 
if not fontes:
    print('Adicionando fontes de exemplo...')
    adicionar_fonte('Pastebin', 'https://pastebin.com', 'surface')
    adicionar_fonte('Reddit', 'https://www.reddit.com', 'surface')
    adicionar_fonte('GitHub', 'https://github.com', 'surface')
    adicionar_fonte('Onion Forum', 'http://onionforumxyz.onion', 'dark')
    adicionar_fonte('Leak Market', 'http://leakmarketxyz.onion', 'dark')
    print('Fontes de exemplo adicionadas com sucesso.')
else:
    print(f'{len(fontes)} fontes j√° cadastradas.')"

# Verificar se o diret√≥rio static existe
if [ ! -d "static" ]; then
    progress "Criando diret√≥rio static..."
    mkdir -p static/css static/js static/images
fi

# Verificar se o diret√≥rio templates existe
if [ ! -d "templates" ]; then
    progress "Criando diret√≥rio templates..."
    mkdir -p templates
fi

# Verificar permiss√µes dos diret√≥rios
progress "Verificando permiss√µes..."
chmod -R 755 .
chmod -R 777 logs
chmod 666 *.db

success "Instala√ß√£o conclu√≠da com sucesso!"
echo ""
echo "Para iniciar o Onion Monitor, execute:"
echo "  source venv/bin/activate && python app.py"
echo ""
echo "O sistema estar√° dispon√≠vel em: http://localhost:5000"
echo ""
echo "üîê Onion Monitor v1 - Monitoramento de vazamentos na Deep/Dark Web üîê"
