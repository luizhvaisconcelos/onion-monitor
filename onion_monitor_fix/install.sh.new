#!/bin/bash

echo "üîê Iniciando instala√ß√£o completa do Onion Monitor v2..."
echo "üßÖ Vers√£o com suporte completo a buscas na deep web, dark web e surface web"
sleep 1

# Cores para melhor visualiza√ß√£o
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para verificar sucesso da opera√ß√£o
check_success() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        echo -e "${YELLOW}‚ö†Ô∏è Continuando a instala√ß√£o, mas algumas funcionalidades podem estar comprometidas.${NC}"
    fi
}

# Atualiza√ß√£o e instala√ß√£o dos pacotes do sistema
echo -e "${YELLOW}üì¶ Atualizando pacotes e instalando depend√™ncias...${NC}"
sudo apt update && sudo apt install -y python3 python3-pip python3-venv tor unzip curl wget gnupg2 firefox-esr xvfb
check_success "Instala√ß√£o de pacotes do sistema"

# Adiciona reposit√≥rio do Tor Project para vers√£o mais recente
echo -e "${YELLOW}üßÖ Adicionando reposit√≥rio oficial do Tor Project...${NC}"
if [ ! -f /etc/apt/sources.list.d/tor.list ]; then
    echo "deb [signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/tor.list
    wget -qO- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --dearmor | sudo tee /usr/share/keyrings/tor-archive-keyring.gpg >/dev/null
    sudo apt update && sudo apt install -y tor deb.torproject.org-keyring
    check_success "Adi√ß√£o do reposit√≥rio oficial do Tor"
else
    echo -e "${GREEN}‚úÖ Reposit√≥rio do Tor j√° configurado${NC}"
fi

# Habilita e inicia o servi√ßo Tor
echo -e "${YELLOW}üßÖ Configurando servi√ßo Tor...${NC}"
sudo systemctl enable tor
sudo systemctl restart tor
sleep 3  # Aguarda inicializa√ß√£o do servi√ßo

# Verifica se o Tor est√° escutando na porta 9050
if ss -ltn | grep -q ":9050"; then
    echo -e "${GREEN}‚úÖ Tor est√° ativo na porta 9050.${NC}"
else
    echo -e "${RED}‚ùå Tor n√£o est√° rodando corretamente na porta 9050.${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è Tentando iniciar o servi√ßo manualmente...${NC}"
    sudo systemctl restart tor
    sleep 5
    
    if ss -ltn | grep -q ":9050"; then
        echo -e "${GREEN}‚úÖ Tor iniciado com sucesso na segunda tentativa.${NC}"
    else
        echo -e "${RED}‚ùå Falha ao iniciar o Tor. Verificando logs...${NC}"
        sudo journalctl -u tor --no-pager -n 20
        echo -e "${YELLOW}‚ö†Ô∏è O sistema continuar√° a instala√ß√£o, mas as buscas em .onion ser√£o simuladas.${NC}"
    fi
fi

# Instala√ß√£o do geckodriver para Selenium
echo -e "${YELLOW}ü¶ä Instalando geckodriver para Selenium...${NC}"
GECKO_VERSION="v0.33.0"
GECKO_URL="https://github.com/mozilla/geckodriver/releases/download/${GECKO_VERSION}/geckodriver-${GECKO_VERSION}-linux64.tar.gz"

if [ ! -f /usr/local/bin/geckodriver ]; then
    wget -q $GECKO_URL -O /tmp/geckodriver.tar.gz
    sudo tar -xzf /tmp/geckodriver.tar.gz -C /tmp/
    sudo mv /tmp/geckodriver /usr/local/bin/
    sudo chmod +x /usr/local/bin/geckodriver
    check_success "Instala√ß√£o do geckodriver"
else
    echo -e "${GREEN}‚úÖ Geckodriver j√° instalado${NC}"
fi

# Cria√ß√£o do ambiente virtual
echo -e "${YELLOW}üìÅ Criando ambiente virtual Python...${NC}"
if [ ! -d "venv" ]; then
    python3 -m venv venv
    check_success "Cria√ß√£o do ambiente virtual"
else
    echo -e "${GREEN}‚úÖ Ambiente virtual j√° existe${NC}"
fi

# Ativando o ambiente virtual
source venv/bin/activate

# Atualizando pip e instalando depend√™ncias
echo -e "${YELLOW}üêç Instalando pacotes Python...${NC}"
pip install --upgrade pip
check_success "Atualiza√ß√£o do pip"

# Instalando depend√™ncias principais
echo -e "${YELLOW}üìö Instalando depend√™ncias principais...${NC}"
pip install -r requirements.txt
check_success "Instala√ß√£o de depend√™ncias do requirements.txt"

# Instalando depend√™ncias adicionais necess√°rias
echo -e "${YELLOW}üîå Instalando depend√™ncias adicionais...${NC}"
pip install requests[socks] PySocks beautifulsoup4 selenium seleniumwire webdriver-manager lxml
check_success "Instala√ß√£o de depend√™ncias adicionais"

# Testando a conex√£o Tor
echo -e "${YELLOW}üß™ Testando conex√£o Tor...${NC}"
python3 -c "
import requests
import sys
try:
    print('Verificando conex√£o Tor...')
    response = requests.get('https://check.torproject.org', 
                           proxies={'http': 'socks5h://127.0.0.1:9050', 
                                   'https': 'socks5h://127.0.0.1:9050'}, 
                           timeout=30)
    if 'Congratulations' in response.text:
        print('‚úÖ Conex√£o Tor funcionando corretamente!')
        sys.exit(0)
    else:
        print('‚ö†Ô∏è Conex√£o estabelecida, mas n√£o est√° usando Tor.')
        sys.exit(1)
except Exception as e:
    print(f'‚ùå Erro ao testar conex√£o Tor: {e}')
    sys.exit(1)
"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Conex√£o Tor verificada com sucesso!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Conex√£o Tor n√£o est√° funcionando corretamente. Buscas em .onion ser√£o simuladas.${NC}"
fi

# Criando banco de dados inicial
echo -e "${YELLOW}üóÑÔ∏è Inicializando banco de dados...${NC}"
python3 -c "
import sys
sys.path.append('.')
try:
    from db import init_db
    init_db()
    print('‚úÖ Banco de dados inicializado com sucesso!')
    sys.exit(0)
except Exception as e:
    print(f'‚ùå Erro ao inicializar banco de dados: {e}')
    sys.exit(1)
"
check_success "Inicializa√ß√£o do banco de dados"

# Criando fontes padr√£o
echo -e "${YELLOW}üîç Criando fontes padr√£o...${NC}"
python3 -c "
import sys
sys.path.append('.')
try:
    from coletor import criar_fontes_padrao
    criar_fontes_padrao()
    print('‚úÖ Fontes padr√£o criadas com sucesso!')
    sys.exit(0)
except Exception as e:
    print(f'‚ùå Erro ao criar fontes padr√£o: {e}')
    sys.exit(1)
"
check_success "Cria√ß√£o de fontes padr√£o"

# Mensagem final de instru√ß√µes
echo ""
echo -e "${GREEN}‚úÖ Instala√ß√£o conclu√≠da com sucesso.${NC}"
echo -e "${YELLOW}üöÄ Para rodar a aplica√ß√£o, use o comando abaixo:${NC}"
echo ""
echo -e "   ${GREEN}source venv/bin/activate && python3 app.py${NC}"
echo ""
echo -e "${YELLOW}üß™ Para testar o funcionamento da conex√£o via Tor, use:${NC}"
echo ""
echo -e "   ${GREEN}python3 torcheck.py${NC}"
echo ""
echo -e "${YELLOW}üìã Documenta√ß√£o e instru√ß√µes adicionais:${NC}"
echo -e "   ${GREEN}MANUAL.md${NC}"
